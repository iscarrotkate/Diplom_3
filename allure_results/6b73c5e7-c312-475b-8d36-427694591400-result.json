{"name": "Изменение счетчика начинок", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 1054) is out of bounds of viewport dimensions (1280, 851)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3103:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:42", "trace": "self = <tests.test_orders.TestOrders object at 0x00000282B014D040>, home_page = <pages.home_page.HomePage object at 0x00000282B014E030>\n\n    @allure.title('Изменение счетчика начинок')\n    @allure.description('Тест проверяет, что при добавлении начинок в заказ, счетчик увеличивается')\n    def test_topping_counter(self, home_page):\n        home_page.open_page_by_direct_url()\n    \n        element = home_page.select_topping()\n        assert home_page.get_ingredient_counter_value(element) == '0'\n    \n>       home_page.add_ingredient_to_order(element)\n\ntests\\test_orders.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\home_page.py:42: in add_ingredient_to_order\n    self.drag_and_drop_element(element, target)\npages\\base_page.py:139: in drag_and_drop_element\n    actions.drag_and_drop(source, target).perform()\nC:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\nC:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:170: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nC:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000282B016F450>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"move target out of bounds\",\"message\":\"Move target (164, 1054) is out of b...ys.mjs:115:17\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:42\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 1054) is out of bounds of viewport dimensions (1280, 851)\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nE       MoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nE       assertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3103:11\nE       #assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:42\n\nC:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: MoveTargetOutOfBoundsException"}, "description": "Тест проверяет, что при добавлении начинок в заказ, счетчик увеличивается", "steps": [{"name": "Открыть главную страницу", "status": "passed", "steps": [{"name": "Открыть страницу по прямому URL", "status": "passed", "parameters": [{"name": "url", "value": "'https://stellarburgers.nomoreparties.site/'"}], "start": 1747472559167, "stop": 1747472560242}], "start": 1747472559167, "stop": 1747472560242}, {"name": "Выбрать начинку", "status": "passed", "steps": [{"name": "Выбрать ингредиент", "status": "passed", "steps": [{"name": "Получить элемент по xpath", "status": "passed", "parameters": [{"name": "xpath", "value": "'//h2[text()='Начинки']/following-sibling::ul[1]'"}], "start": 1747472560242, "stop": 1747472560266}, {"name": "Получить дочерние элементы по xpath", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"8dd7be3c-e1fa-46f7-8bfc-82efc0f6dabc\", element=\"5134cf39-52c1-4c0f-96e3-5ac117f23f96\")>"}, {"name": "xpath", "value": "'.//a[contains(@class, 'BurgerIngredient_ingredient')]'"}], "start": 1747472560266, "stop": 1747472560286}], "parameters": [{"name": "section", "value": "'//h2[text()='Начинки']/following-sibling::ul[1]'"}, {"name": "index", "value": "0"}], "start": 1747472560242, "stop": 1747472560286}], "parameters": [{"name": "index", "value": "0"}], "start": 1747472560242, "stop": 1747472560286}, {"name": "Получить значение счетчика ингредиента", "status": "passed", "parameters": [{"name": "ingredient", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"8dd7be3c-e1fa-46f7-8bfc-82efc0f6dabc\", element=\"21899cd3-3ab3-4da6-94db-2ca308ce82cb\")>"}], "start": 1747472560286, "stop": 1747472560318}, {"name": "Добавить ингредиент в заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 1054) is out of bounds of viewport dimensions (1280, 851)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3103:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:42\n\n", "trace": "  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\PyProjects\\PythonProject\\diploma\\diploma-ekb\\pages\\home_page.py\", line 42, in add_ingredient_to_order\n    self.drag_and_drop_element(element, target)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\PyProjects\\PythonProject\\diploma\\diploma-ekb\\pages\\base_page.py\", line 139, in drag_and_drop_element\n    actions.drag_and_drop(source, target).perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 170, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Получить элемент по xpath", "status": "passed", "parameters": [{"name": "xpath", "value": "'//ul[@class='BurgerConstructor_basket__list__l9dp_']'"}], "start": 1747472560319, "stop": 1747472560343}, {"name": "Перетащить элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.MoveTargetOutOfBoundsException: Message: Move target (164, 1054) is out of bounds of viewport dimensions (1280, 851)\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:199:5\nMoveTargetOutOfBoundsError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:518:5\nassertTargetInViewPort@chrome://remote/content/shared/webdriver/Actions.sys.mjs:3103:11\n#assertInViewPort@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:115:17\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:210:42\n\n", "trace": "  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\PyProjects\\PythonProject\\diploma\\diploma-ekb\\pages\\base_page.py\", line 139, in drag_and_drop_element\n    actions.drag_and_drop(source, target).perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n    ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 170, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\Carrot\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "source", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"8dd7be3c-e1fa-46f7-8bfc-82efc0f6dabc\", element=\"21899cd3-3ab3-4da6-94db-2ca308ce82cb\")>"}, {"name": "target", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"8dd7be3c-e1fa-46f7-8bfc-82efc0f6dabc\", element=\"bbbbebbe-d36d-4a77-add7-5dc4f656881e\")>"}], "start": 1747472560343, "stop": 1747472560369}], "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"8dd7be3c-e1fa-46f7-8bfc-82efc0f6dabc\", element=\"21899cd3-3ab3-4da6-94db-2ca308ce82cb\")>"}], "start": 1747472560319, "stop": 1747472560455}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1747472559167, "stop": 1747472560457, "uuid": "44190a2e-21ef-4806-82d5-1a9e16b8f928", "historyId": "bf4fabc9e3dcea990a06b36031a11869", "testCaseId": "b615bb4510de6827f9d365d291066818", "fullName": "tests.test_orders.TestOrders#test_topping_counter", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_orders"}, {"name": "subSuite", "value": "TestOrders"}, {"name": "host", "value": "DESKTOP-BEEKPER"}, {"name": "thread", "value": "12168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_orders"}]}